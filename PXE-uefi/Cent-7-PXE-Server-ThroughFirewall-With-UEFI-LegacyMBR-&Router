   Cent-7-PXE-Server-ThroughFirewall-with-UEFi-&-LegacyMBR-Jul-2016
=============================================================

# yum install tftp-server tftp xinetd syslinux dhcp wget 

   DHCP-Server
==================

# yum install dhcp

# vi /etc/dhcp/dhcpd.conf 
option routers 80.0.0.111;
option domain-name "testsvk.org";
option domain-name-servers 8.8.8.8;
option subnet-mask 255.255.255.0;
subnet 80.0.0.0 netmask 255.255.255.0 {
range 80.0.0.150 80.0.0.200;
allow unknown-clients;
allow booting ;
allow bootp ;
if substring (option vendor-class-identifier, 15, 5) = "00007" {
   filename "syslinux.efi";
}
else  {
   filename "legacy/pxelinux.0";
}
}
#
 

# systemctl enable dhcpd

For Multi-NIC System----------

If more than one network interface is attached to the system, 
but the DHCP server should only listen for DHCP requests on one of the interfaces, 
configure the DHCP server to listen only on that device.

Edit the line under section [Service]: 
###ExecStart=xxxxxxxxxx dhcpd --no-pid your_interface_name(s)

# cp /usr/lib/systemd/system/dhcpd.service /etc/systemd/system/
# vi /etc/systemd/system/dhcpd.service
...
[Service]:
ExecStart=/usr/sbin/dhcpd -f -cf /etc/dhcp/dhcpd.conf -user dhcpd -group dhcpd --no-pid eth1
#

# systemctl --system daemon-reload
# systemctl restart dhcpd

			NFS-Server
==================

# yum install nfs-utils

# systemctl restart rpcbind
# systemctl restart nfs-server

# systemctl enable rpcbind
# systemctl enable nfs-server


			TFTP-Server
==================


# vi /etc/xinetd.d/tftp
service tftp
{
	socket_type		= dgram
	protocol		= udp
	wait			= yes
	user			= root
	server			= /usr/sbin/in.tftpd
	server_args		= -s /var/lib/tftpboot
	disable			= no
	per_source		= 11
	cps			= 100 2
	flags			= IPv4
}
#

# mkdir -p /var/lib/tftpboot/pxelinux.cfg
# mkdir /var/lib/tftpboot/images
# chmod -R 777 /var/lib/tftpboot/

================================
	For UEFI
================================

Download and Extract SYSLINUX's files
--------------------------------------------------------------------------------
# cd /FTP
# wget https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-6.03.tar.gz
# tar -xzvf syslinux-6.03.tar.gz

# cp /FTP/syslinux-6.03/efi64/efi/syslinux.efi /var/lib/tftpboot/
# cp /FTP/syslinux-6.03/efi64/com32/menu/vesamenu.c32 /var/lib/tftpboot/
# cp /FTP/syslinux-6.03/efi64/com32/elflink/ldlinux/ldlinux.e64 /var/lib/tftpboot/
# cp /FTP/syslinux-6.03/efi64/com32/libutil/libutil.c32 /var/lib/tftpboot/
# cp /FTP/syslinux-6.03/efi64/com32/lib/libcom32.c32 /var/lib/tftpboot/


# wget https://www.dropbox.com/s/2yhhqk9e09382tf/SVK-Wall.png -O /var/lib/tftpboot/svk.png

# vi /var/lib/tftpboot/pxelinux.cfg/default
DEFAULT vesamenu.c32
#######
MENU BACKGROUND svk.png
MENU COLOR BORDER 0 #ffffffff #00000000 std
MENU COLOR TITLE 0 #ffffffff #00000000 std
MENU COLOR SEL 0 #ffffffff #ff000000 std
#######
TIMEOUT 60
UI vesamenu.c32
MENU TITLE PXE-Server-Multi-OS-SVK
#

================================
	ADD-OS-Images-To-PXE
================================

1. Ubuntu 16.04 live ISO 
----------------------------------------------

# mount /dev/cdrom /media

# mkdir /FTP/ubuntu1604
# cp -ar /media/* /FTP/ubuntu1604
# cp -ar /media/.disk /FTP/ubuntu1604

# umount /media 

# mkdir -p /var/lib/tftpboot/images/ubuntu1604

# cp -ar /FTP/ubuntu1604/casper/initrd.lz /var/lib/tftpboot/images/ubuntu1604
# cp -ar /FTP/ubuntu1604/casper/vmlinuz.efi /var/lib/tftpboot/images/ubuntu1604

# vi /etc/exports
...
/FTP/ubuntu1604 *(no_root_squash,ro,async,insecure)
#

# exportfs -a

# vi /var/lib/tftpboot/pxelinux.cfg/default
...
LABEL Ubuntu1604-x64-Desktop
KERNEL images/ubuntu1604/vmlinuz.efi
APPEND vga=normal boot=casper netboot=nfs nfsroot=80.0.0.111:/FTP/ubuntu1604/ initrd=images/ubuntu1604/initrd.lz ramdisk_size=32768
#

2. Ubuntu 14.04 live ISO 
----------------------------------------------

# mount /dev/cdrom /media

# mkdir /FTP/ubuntu1404
# cp -ar /media/* /FTP/ubuntu1404
# cp -ar /media/.disk /FTP/ubuntu1404

# umount /media 

# mkdir -p /var/lib/tftpboot/images/ubuntu1404

# cp -ar /FTP/ubuntu1404/casper/initrd.lz /var/lib/tftpboot/images/ubuntu1404
# cp -ar /FTP/ubuntu1404/casper/vmlinuz.efi /var/lib/tftpboot/images/ubuntu1404

# vi /etc/exports
...
/FTP/ubuntu1404 *(no_root_squash,ro,async,insecure)
#

# exportfs -a

# vi /var/lib/tftpboot/pxelinux.cfg/default
...
LABEL Ubuntu1404-x64-Desktop
KERNEL images/ubuntu1404/vmlinuz.efi
APPEND vga=normal boot=casper netboot=nfs nfsroot=80.0.0.111:/FTP/ubuntu1404/ initrd=images/ubuntu1404/initrd.lz ramdisk_size=32768
#

3. Clonezilla Live 
----------------------------------------------

# mount /dev/cdrom /media

# mkdir -p /var/lib/tftpboot/images/clonezilla

# cp -ar /media/live/filesystem.squashfs /var/lib/tftpboot/images/clonezilla
# cp -ar /media/live/vmlinuz  /var/lib/tftpboot/images/clonezilla
# cp -ar /media/live/initrd.img  /var/lib/tftpboot/images/clonezilla

# vi /var/lib/tftpboot/pxelinux.cfg/default
...
LABEL Clonezilla-2.4.2-Live
KERNEL images/clonezilla/vmlinuz
APPEND initrd=images/clonezilla/initrd.img boot=live union=overlay username=user config components quiet noswap edd=on nomodeset nodmraid noeject locales= keyboard-layouts= ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch=no vga=788 ip=  nosplash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1 fetch=tftp://80.0.0.111/images/clonezilla/filesystem.squashfs
#

4.GParted
----------------------------------------------

# mount /dev/cdrom /media

# mkdir /var/lib/tftpboot/images/gparted
# cp -ar /media/live/* /var/lib/tftpboot/images/gparted

# umount /media 

# ls -ap /var/lib/tftpboot/images/gparted
filesystem.packages         filesystem.squashfs  memtest
filesystem.packages-remove  initrd.img           vmlinuz
#


# vi /var/lib/tftpboot/pxelinux.cfg/default
......
#######GPARTED####################
label GParted Live-0.22
kernel images/gparted/vmlinuz
append initrd=images/gparted/initrd.img boot=live union=overlay username=user config components quiet noswap noeject vga=788 fetch=tftp://80.0.0.111/images/gparted/filesystem.squashfs
#

================================
	For Legacy-MBR
================================

# mkdir -p /var/lib/tftpboot/legacy/pxelinux.cfg
# cp -ar  /var/lib/tftpboot/images /var/lib/tftpboot/legacy/
# chmod -R 777 /var/lib/tftpboot/legacy

# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/legacy/
# cp /usr/share/syslinux/vesamenu.c32 /var/lib/tftpboot/legacy/

# 

# wget https://www.dropbox.com/s/2yhhqk9e09382tf/SVK-Wall.png -O /var/lib/tftpboot/legacy/svk.png

Copy the same "pxelinux.cfg/default " file for Legacy-MBR also

# vi /var/lib/tftpboot/legacy/pxelinux.cfg/default 
DEFAULT vesamenu.c32
MENU BACKGROUND svk.png
MENU COLOR BORDER 0 #ffffffff #00000000 std
MENU COLOR TITLE 0 #ffffffff #00000000 std
MENU COLOR SEL 0 #ffffffff #ff000000 std
TIMEOUT 60
MENU TITLE PXE-Server-Multi-OS-SVK
....
#

=============================================================

Firewall-settings
----------------------------------------------

# firewall-cmd --list-all
# firewall-cmd --list-services
# firewall-cmd --list-ports
# firewall-cmd --permanent --list-all
# firewall-cmd --get-default-zone

# firewall-cmd --permanent --add-service=dhcp     ## Port 67
# firewall-cmd --permanent --add-port=69/udp     ## Port for TFTP/xinetd
# firewall-cmd --permanent --add-port=69/tcp    ## Port for TFTP/xinetd
					For-NFS
# firewall-cmd --permanent --add-service mountd
# firewall-cmd --permanent --add-service rpc-bind
# firewall-cmd --permanent --add-service nfs
# firewall-cmd --reload

# systemctl restart firewalld

# systemctl restart xinetd
# systemctl restart dhcpd

# systemctl enable xinetd
# systemctl enable dhcpd

=============================================================
		Cent-7-Router
=============================================================

External Interface(Public)	===	eth0
Internal Interface(private)	===	eth1

# vi /etc/sysctl.conf
...
net.ipv4.ip_forward = 1
#
# sysctl -p

# firewall-cmd --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -o eth0 -j MASQUERADE
# firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i eth1 -o eth0 -j ACCEPT
# firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -i eth0 -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT

List Rules
----------------------------------------------

# firewall-cmd --permanent --direct --get-all-rules

# firewall-cmd --permanent --direct --get-rules ipv4 nat POSTROUTING 
# firewall-cmd --permanent --direct --get-rules ipv4 filter FORWARD

# systemctl --state=running|egrep "dhcp|xinetd|nfs"



